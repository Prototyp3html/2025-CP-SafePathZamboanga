import getEPSGCode from "get-epsg-code";

export default async function parse(geotiff) {
  const image = await geotiff.getImage();

  const geoKeys = await image.getGeoKeys();

  const { ProjectedCSTypeGeoKey } = geoKeys;
  // check if projected
  if (
    typeof ProjectedCSTypeGeoKey === "number" &&
    ProjectedCSTypeGeoKey !== 32767 &&
    ProjectedCSTypeGeoKey <= 32760
  ) {
    return ProjectedCSTypeGeoKey;
  }

  const { GeographicTypeGeoKey } = geoKeys;
  // check if geographic
  if (
    typeof GeographicTypeGeoKey === "number" &&
    typeof ProjectedCSTypeGeoKey !== "number"
  ) {
    return GeographicTypeGeoKey;
  }

  const { PCSCitationGeoKey } = geoKeys;
  if (PCSCitationGeoKey && PCSCitationGeoKey.includes("ESRI PE String")) {
    const citation = PCSCitationGeoKey.split("\x00").find((it) =>
      it.startsWith("ESRI PE String")
    );
    const esri_wkt = citation.replace("ESRI PE String = ", "");
    const code = await getEPSGCode(esri_wkt);
    if (code) {
      return code;
    }
  }
}
